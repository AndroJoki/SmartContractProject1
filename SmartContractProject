// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;

contract TokenBank {
    mapping(address => uint) public balances;

    // Custom error for insufficient balance
    error InsufficientBalance(uint requested, uint available);

    // Function to deposit tokens to the bank account
    function deposit(address _address, uint _amount) public {
        require(_amount > 0, "Deposit amount must be greater than 0");
        balances[_address] += _amount;

        // Assert that the balance is correctly updated
        assert(balances[_address] >= _amount);
    }

    // Function to withdraw tokens from the bank account
    function withdraw(address _address, uint _amount) public {
        if (_amount > balances[_address]) {
            revert InsufficientBalance({requested: _amount, available: balances[_address]});
        }
        balances[_address] -= _amount;
    }
}
